def pathProjTest = "/var/jenkins_home/workspace/NVHIEN_MTA/DATN/CICD-Project/Backend/Web.Test"
def pathProjectSonar = "http://168.138.194.53:9000/dashboard?id=sonar-datn"
def tokenSonar = "sqp_6112e30b1c47a1165462aba165daa6407e9eb866"
def messageNoti = "### JENKIN pipeline report with job NVHIEN_MTA/DATN/CICD-Project ###"
def pathTestResultDetail = "http://vanhien.online:8080/job/NVHIEN_MTA/job/DATN/job/CICD-Project/test_results_analyzer/"
def pathProject = "/var/jenkins_home/workspace/NVHIEN_MTA/DATN/CICD-Project"
pipeline{
    agent any
    environment {
        PATH = "$PATH:/root/.dotnet/tools"
    }
    stages{
       stage('Get Code') {
            steps {
                echo 'get code'
                git url : 'https://github.com/HienVanNguyen0408/DoAnTotNghiep.git', branch : "dev", credentialsId : '86892c3c-1935-4ba7-9be1-706408b46397'
                echo 'get code success'
            }
        }       
        stage('Run test') {
            steps {
                echo "Start run test"
                dir("${pathProjTest}"){
                    sh """
                       dotnet test --logger "trx;LogFileName=TestResult.trx;ResultsDirectory=./TestResults"
                       trx2junit ./TestResults/TestResult.trx
                    """
                }
                echo "End run test"
            }
        }
        stage('Publish test report'){
            steps{
                script{
                    dir("${pathProjTest}"){
                        def summary = junit skipMarkingBuildUnstable: true, testResults: 'TestResults/*.xml'
                        messageNoti += "\n- ###Kết quả chạy Unite Test###\n *Test Summary*\n-Passed/Total::${summary.passCount}/${summary.totalCount}\nTotal::${summary.totalCount}, Failures::${summary.failCount}, Skipped::${summary.skipCount}, Passed::${summary.passCount}\n"
                        messageNoti += "\n- Jenkins test result detail: ${pathTestResultDetail}"
                        
                    }
                }
            }
        }
        stage('Code Analysis') {
            steps{
                script{
                    withSonarQubeEnv(installationName : 'jenkins-sonar') {
                        echo "Start scan Sonar code"
                        dir("${pathProject}/Backend"){
                            sh """
                                dotnet sonarscanner begin /k:"sonar-datn" /d:sonar.host.url="http://168.138.194.53:9000"  /d:sonar.token="${tokenSonar}"
                                dotnet build
                                dotnet sonarscanner end /d:sonar.token="${tokenSonar}"
                            """
                            messageNoti += "\n- Hiến thông báo đã Code Analysis xong::Xem chi tiết tại đây::${pathProjectSonar}"
                        }
                        echo "End scan Sonar code"
                    }
                }
            }
        }
        stage('Build & Deploy webapp'){
            steps {
                echo 'build'
                dir("${pathProject}/Fontend"){
                    sh """
                        docker build . -t hienvannguyen0408/doantotnghiep-app:lastest
                        docker login -u hienvannguyen0408 -p Hien04080408
                        docker push hienvannguyen0408/doantotnghiep-app:lastest
                        docker rm -f datnwebapp
                        docker run --rm -d --name datnwebapp  --publish "8082:80" -v /app/node_modules -v /app --user root --privileged=true -d hienvannguyen0408/doantotnghiep-app:lastest
                    """
                    messageNoti += "\n- Hiến thông báo đã build và deploy thành công web-app"
                }
            }
        }
        stage('Build & Deploy webapi'){
            steps {
                echo 'build'
                dir("${pathProject}/Backend"){
                    sh """
                        docker build . -f Dockerfile -t hienvannguyen0408/doantotnghiep-api:lastest
                        docker login -u hienvannguyen0408 -p Hien04080408
                        docker push hienvannguyen0408/doantotnghiep-api:lastest
                        docker rm -f datnwebapi
                        docker run --rm -d --name datnwebapi  --publish "5001:80" -v /app/publish  --user root --privileged=true -d hienvannguyen0408/doantotnghiep-api:lastest
                    """
                    messageNoti += "\n- Hiến thông báo đã build và deploy thành công web-api"
                }
            }
        }
    }
    post {
        success {
            slackSend channel: '#ci-jenkins', message: "Hiến thông báo quá trình ci-project thành công!!!\n\n${messageNoti}"
        }
        failure {
            slackSend channel: '#ci-jenkins', message: "Hiến thông báo quá trình ci-project thất bại!!!\n\n${messageNoti}"
        }
    }
}